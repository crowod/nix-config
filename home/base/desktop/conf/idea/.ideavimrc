let mapleader=','

set hlsearch
set incsearch
set ignorecase
set smartcase
set showmode
set scrolloff=3
set history=100000
set clipboard+=unnamed

Plug 'easymotion/vim-easymotion'
Plug 'vim-matchit'
Plug 'chrisbra/matchit'
packadd matchit
set matchit
set easymotion
set surround


" clear the highlighted search result
nnoremap <Leader>sc :nohlsearch<CR>

nnoremap <Leader>? :action GotoAction<CR>
nnoremap <Leader>fu :action FindUsages<CR>

" Insert mode shortcut
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-d> <Delete>
inoremap <C-b> <BS> 

" Normal mode shortcut
nnoremap [<space> ko<Esc>
nnoremap ]<space> o<Esc>
nnoremap <Leader>p "+p

"Visible mode shortcut
vnoremap <Leader>y "+y
vnoremap <Leader>p "+p


" ==================================================
" Show all the provided actions via `:actionlist`
" ==================================================

" built in search looks better
nnoremap / :action Find<CR>
" but preserve ideavim search
nnoremap <Leader>bb :action ToggleLineBreakpoint<CR>
nnoremap <Leader>br :action ViewBreakpoints<CR>

nnoremap <Leader>cv :action ChangeView<CR>

nnoremap <Leader>cd :action ChooseDebugConfiguration<CR>

nnoremap <Leader>ga :action GotoAction<CR>
nnoremap <Leader>gc :action GotoClass<CR>
nnoremap <Leader>gd :action GotoDeclaration<CR>
nnoremap <Leader>gf :action GotoFile<CR>
nnoremap <Leader>gi :action GotoImplementation<CR>
nnoremap <Leader>gs :action GotoSymbol<CR>
nnoremap <Leader>gt :action GotoTest<CR>
nnoremap <Leader>sm :action GotoSuperMethod<CR>

nnoremap <Leader>fp :action ShowFilePath<CR>

nnoremap <Leader>ic :action InspectCode<CR>

nnoremap <Leader>mv :action ActivateMavenProjectsToolWindow<CR>

nnoremap <Leader>oi :action OptimizeImports<CR>

nnoremap <Leader>pm :action ShowPopupMenu<CR>
nnoremap <Leader>ct :action CloseEditor<CR>

nnoremap <Leader>rc :action ChooseRunConfiguration<CR>
nnoremap <Leader>re :action RenameElement<CR>
nnoremap <Leader>rf :action RenameFile<CR>
nnoremap <Leader>su :action ShowUsages<CR>
nnoremap <Leader>tc :action CloseActiveTab<CR>
nnoremap <Leader>me :action MaximizeEditorInSplit<CR>
nnoremap <Leader>sv :action SplitVertically<CR>
nnoremap <Leader>sh :action SplitHorizontally<CR>
nnoremap <Leader>ne :action GotoNextError<CR>
nnoremap <Leader>pe :action GotoPreviousError<CR>

nnoremap <Leader>rc :action RunToCursor<CR>

nnoremap <Leader><Leader>rp :action StringManipulation.ToCamelCase<CR>

nnoremap <Leader>tl Vy<CR>:action ActivateTerminalToolWindow<CR>
vnoremap <Leader>tl y<CR>:action ActivateTerminalToolWindow<CR>

map <Leader><Leader>l <Plug>(easymotion-lineforward)
map <Leader><Leader>h <Plug>(easymotion-linebackward)
map <Leader>sn <Plug>(easymotion-s2)
map <Leader>tn <Plug>(easymotion-t2)
map <Leader>db :action Debug<CR>
map <Leader>st :action Stop<CR>
map <Leader>so :action StepOver<CR>
map <Leader>si :action StepInto<CR>
map <Leader>fs :action FileStructurePopup<CR>
map <Leader>gh :action ShowHoverInfo<CR>

map <Leader>ee :action EvaluateExpression<CR>
map <Leader><Leader>re :action Resume<CR>

let g:EasyMotion_startofline=0